{"version":3,"sources":["webpack://SimpleZoom/webpack/universalModuleDefinition","webpack://SimpleZoom/webpack/bootstrap","webpack://SimpleZoom/./src/utils.js","webpack://SimpleZoom/./src/event-handlers.js","webpack://SimpleZoom/./src/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","preventDefault","event","window","returnValue","deepCompare","a","b","Error","parseTouches","element","touches","clientTop","clientLeft","Array","from","map","clientX","clientY","force","identifier","pageX","pageY","radiusX","radiusY","rotationAngle","screenX","screenY","offsetX","offsetY","getBounds","zoom","translate","transformOrigin","clientWidth","clientHeight","top","y","right","x","bottom","left","assign","MouseWheel","minZoom","maxZoom","zoomSpeed","options","zoomable","dragable","state","stopPropagation","cancelBubble","target","SVGElement","offsetLeft","offsetTop","offsetParent","el","newZoom","Math","max","min","wheelDelta","detail","abs","bounds","side","setState","MouseUp","movingTranslate","isMouseMoving","classList","remove","removeEventListener","_on","__webpack_exports__","src_SimpleZoom","DEFAULTOPTIONS","initZoom","padding","SimpleZoom","constructor","document","querySelector","HTMLElement","nodeType","nodeName","parentNode","tagName","add","mousewheel","eventHandlers","DOMMouseScroll","mousedown","moveStart","addEventListener","mousemove","newMovingTranslate","mouseup","mouseout","touchmovestart","isTouchZoom","length","touchTimer","setTimeout","touch","isTouchMoving","touchStart","touchmove","touchmoveend","touchzoomstart","clearTimeout","touchDistance","sqrt","pow","touchzoom","touchZoomTimer","onTouchZoomEnd","newTouchDistance","touchzoomend","_onListeners","_eventListeners","_init","reset","update","_setTransform","style","transform","_setTransformOrigin","_dispatchEvent","type","data","timestamp","Date","now","error","console","warn","forEach","listener","destroy","isMoved","isZoomed","utils","isTranslated","transformOriginChanged","on","callback","off","push","filter","subscribe","instance"],"mappings":"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","file":"simple-zoom.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleZoom\"] = factory();\n\telse\n\t\troot[\"SimpleZoom\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\r\n * 判断是否为 HTMLElement\r\n * @param {*} obj \r\n */\r\nfunction isHTMLElement(element) {\r\n  if (typeof HTMLElement === 'object') {\r\n    return (element instanceof HTMLElement);\r\n  } else {\r\n    return (element && typeof element === 'object' && element.nodeType === 1 && typeof element.nodeName === 'string');\r\n  }\r\n}\r\n/**\r\n * 取消默认事件\r\n * @param {event} event \r\n */\r\nfunction preventDefault(event) {\r\n  // 获取事件\r\n  event = event || window.event;\r\n  // 取消默认行为\r\n  if (event.preventDefault) {\r\n    event.preventDefault();\r\n  } else {\r\n    event.returnValue = false;\r\n  };\r\n}\r\n/**\r\n * 取消事件冒泡\r\n * @param {event} event \r\n */\r\nfunction cancelBubble(event) {\r\n  // 获取事件\r\n  event = event || window.event;\r\n  // 取消事件冒泡\r\n  if (event.stopPropagation) {\r\n    event.stopPropagation();\r\n  } else {\r\n    event.cancelBubble = true;\r\n  };\r\n}\r\n/**\r\n * 判断参数是否相同\r\n * @param {*} a \r\n * @param {*} b \r\n */\r\nfunction deepCompare(a, b) {\r\n  if (typeof a !== typeof b) {\r\n    throw new Error('compare failed, not the same type');\r\n  }\r\n  let type = typeof a;\r\n  if (type !== 'object') {\r\n    return (a === b)\r\n  } else {\r\n    for (let key in a) {\r\n      let type = typeof a[key];\r\n      if (type !== 'object') {\r\n        if (a[key] !== b[key]) {\r\n          return false;\r\n        }\r\n      } else {\r\n        deepCompare(a[key], b[key])\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n/**\r\n * touch 事件属性无法解构赋值，也没有 offsetX 和offsetY ，需要进行格式化\r\n * @param {HTMLElement} element \r\n * @param {array} touches \r\n */\r\nfunction parseTouches(element, touches) {\r\n  let { clientTop, clientLeft } = element;\r\n  return Array.from(touches).map(d => ({\r\n    clientX: d.clientX,\r\n    clientY: d.clientY,\r\n    force: d.force,\r\n    identifier: d.identifier,\r\n    pageX: d.pageX,\r\n    pageY: d.pageY,\r\n    radiusX: d.radiusX,\r\n    radiusY: d.radiusY,\r\n    rotationAngle: d.rotationAngle,\r\n    screenX: d.screenX,\r\n    screenY: d.screenY,\r\n    offsetX: d.clientX - clientTop,\r\n    offsetY: d.clientY - clientLeft,\r\n  }))\r\n}\r\n/**\r\n * 获取元素距离四边的距离\r\n * @param {HTMLElement} element \r\n * @param {number} zoom \r\n * @param {object} translate \r\n * @param {object} transformOrigin \r\n */\r\nfunction getBounds(element, zoom, translate, transformOrigin) {\r\n  let { clientWidth, clientHeight } = element;\r\n  return {\r\n    top: translate.y - (transformOrigin.y * (zoom - 1)),\r\n    right: ((clientWidth - transformOrigin.x) * (1 - zoom)) - translate.x,\r\n    bottom: ((clientHeight - transformOrigin.y) * (1 - zoom)) - translate.y,\r\n    left: translate.x - (transformOrigin.x * (zoom - 1)),\r\n  }\r\n}\r\nfunction getOffset(event, element) {\r\n  let {target, offsetX, offsetY} = event;\r\n  if(target instanceof SVGElement || element instanceof SVGElement) {\r\n    return {\r\n      offsetX,\r\n      offsetY,\r\n    }\r\n  }else {\r\n    while(target !== element) {\r\n      offsetX += target.offsetLeft;\r\n      offsetY += target.offsetTop;\r\n      target = target.offsetParent;\r\n    }\r\n    return {\r\n      offsetX,\r\n      offsetY\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  isHTMLElement,\r\n  preventDefault,\r\n  cancelBubble,\r\n  deepCompare,\r\n  parseTouches,\r\n  getBounds,\r\n  getOffset,\r\n}","import {\r\n  preventDefault,\r\n  cancelBubble,\r\n  parseTouches,\r\n  getBounds,\r\n  getOffset\r\n} from './utils';\r\nconst assign = Object.assign;\r\n\r\n/**\r\n * 鼠标滚轮缩放\r\n * @param {event} event \r\n */\r\nfunction MouseWheel(event) {\r\n  // 获取配置\r\n  let { minZoom, maxZoom, zoomSpeed } = this.options;\r\n  let { zoomable, dragable, zoom, translate, transformOrigin } = this.state;\r\n  if (!zoomable) return;\r\n  preventDefault(event);\r\n  cancelBubble(event);\r\n  // 获取鼠标相对左上角的位置\r\n  let {offsetX, offsetY} = getOffset(event, this.el);\r\n  // 根据缩放幅度和缩放速度计算缩放比例\r\n  let delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail))) * zoomSpeed;\r\n  let newZoom = zoom + delta;\r\n  // 边界情况判断，开启回弹效果\r\n  if (newZoom < minZoom) {\r\n    newZoom = minZoom;\r\n  } else if (newZoom > maxZoom) {\r\n    newZoom = maxZoom;\r\n  } else if (Math.abs(newZoom - 1) < (zoomSpeed / 2)) {\r\n    newZoom = 1;\r\n  }\r\n  // 小于等于初始缩放比例时不允许拖拽，大于初始缩放比例时需要注意不能出界\r\n  if (newZoom <= 1) {\r\n    dragable = false;\r\n    translate = { x: 0, y: 0 };\r\n    transformOrigin = {\r\n      x: (this.el.clientWidth / 2),\r\n      y: (this.el.clientHeight / 2),\r\n    }\r\n  } else {\r\n    dragable = true;\r\n    // 避免直接修改原对象\r\n    translate = {\r\n      x: translate.x,\r\n      y: translate.y\r\n    };\r\n    transformOrigin = {\r\n      x: offsetX,\r\n      y: offsetY,\r\n    };\r\n    // 判断缩放后元素有没有出界\r\n    let bounds = getBounds(this.el, newZoom, translate, transformOrigin);\r\n    for (let side in bounds) {\r\n      if (bounds[side] > 0) {\r\n        switch (side) {\r\n          case 'top':\r\n            translate.y -= bounds.top;\r\n            break;\r\n          case 'right':\r\n            translate.x += bounds.right;\r\n            break;\r\n          case 'bottom':\r\n            translate.y += bounds.bottom;\r\n            break;\r\n          case 'left':\r\n            translate.x -= bounds.left;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.setState(assign({}, this.state, {\r\n    dragable,\r\n    zoom: newZoom,\r\n    translate,\r\n    transformOrigin,\r\n  }))\r\n}\r\n/**\r\n * 鼠标点击进入拖拽模式\r\n * @param {event} event \r\n */\r\nfunction MouseDown(event) {\r\n  let { dragable, translate } = this.state;\r\n  if (!dragable) return;\r\n  preventDefault(event);\r\n  let { clientX, clientY } = event;\r\n  this.setState(assign({}, this.state, {\r\n    isMouseMoving: true,\r\n    moveStart: {\r\n      x: clientX,\r\n      y: clientY,\r\n    },\r\n    movingTranslate: assign({}, translate),\r\n  }));\r\n  // 修改cursor样式\r\n  this.el.classList.add('move');\r\n  this.el.addEventListener('mousemove', this._on['mousemove']);\r\n  this.el.addEventListener('mouseup', this._on['mouseup']);\r\n  this.el.addEventListener('mouseout', this._on['mouseout']);\r\n}\r\n/**\r\n * 移动鼠标进行拖拽\r\n * @param {event} event \r\n */\r\nfunction MouseMove(event) {\r\n  let { padding } = this.options;\r\n  let { zoom, translate, transformOrigin, moveStart } = this.state;\r\n  preventDefault(event);\r\n  let { clientX, clientY } = event;\r\n  // 计算移动后的 translate\r\n  let newMovingTranslate = {\r\n    x: translate.x + (clientX - moveStart.x),\r\n    y: translate.y + (clientY - moveStart.y),\r\n  }\r\n  // 判断拖拽后元素有没有出界\r\n  let bounds = getBounds(this.el, zoom, newMovingTranslate, transformOrigin);\r\n  for (let side in bounds) {\r\n    if (bounds[side] > padding) {\r\n      switch (side) {\r\n        case 'top':\r\n          newMovingTranslate.y = (transformOrigin.y * (zoom - 1)) + padding;\r\n          break;\r\n        case 'right':\r\n          newMovingTranslate.x = ((this.el.clientWidth - transformOrigin.x) * (1 - zoom)) - padding;\r\n          break;\r\n        case 'bottom':\r\n          newMovingTranslate.y = ((this.el.clientHeight - transformOrigin.y) * (1 - zoom)) - padding;\r\n          break;\r\n        case 'left':\r\n          newMovingTranslate.x = (transformOrigin.x * (zoom - 1)) + padding;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  this.setState(assign({}, this.state, {\r\n    movingTranslate: newMovingTranslate\r\n  }));\r\n}\r\n/**\r\n * 鼠标抬起退出拖拽模式\r\n */\r\nfunction MouseUp() {\r\n  let { movingTranslate } = this.state;\r\n  this.setState(assign({}, this.state, {\r\n    translate: assign({}, movingTranslate),\r\n    isMouseMoving: false,\r\n  }));\r\n  this.el.classList.remove('move');\r\n  this.el.removeEventListener('mousemove', this._on['mousemove']);\r\n  this.el.removeEventListener('mouseup', this._on['mouseup']);\r\n  this.el.removeEventListener('mouseout', this._on['mouseout']);\r\n}\r\n/* 移动端适配 */\r\n/**\r\n * 单指 touch 进入拖拽模式\r\n * @param {event} event \r\n */\r\nfunction TouchMoveStart(event) {\r\n  let { dragable, isTouchZoom, translate } = this.state;\r\n  // 如果位置被锁定或已进入拖拽模式，直接返回\r\n  if (!dragable || isTouchZoom) return;\r\n  preventDefault(event);\r\n  let touches = parseTouches(this.parentNode, event.touches);\r\n  let length = touches.length;\r\n  if (length !== 2) {\r\n    // 延迟执行，如果 100ms 内变为双指，则判定为缩放操作\r\n    this.state.touchTimer = setTimeout(() => {\r\n      let touch = event.touches[0];\r\n      let { clientX, clientY } = touch;\r\n      this.setState(assign({}, this.state, {\r\n        touchTimer: null,\r\n        isTouchMoving: true,\r\n        touchStart: {\r\n          x: clientX,\r\n          y: clientY\r\n        },\r\n        movingTranslate: assign({}, translate)\r\n      }));\r\n      this.parentNode.addEventListener('touchmove', this._on['touchmove']);\r\n      this.parentNode.addEventListener('touchend', this._on['touchmoveend']);\r\n    }, 100)\r\n  }\r\n}\r\n/**\r\n * 移动手指进行拖拽\r\n * @param {event} event \r\n */\r\nfunction TouchMove(event) {\r\n  let { padding } = this.options;\r\n  let { zoom, translate, touchStart, movingTranslate, transformOrigin } = this.state;\r\n  preventDefault(event);\r\n  let touches = parseTouches(this.parentNode, event.touches);\r\n  let { clientX, clientY } = touches[0];\r\n  let newMovingTranslate = {\r\n    x: translate.x + (clientX - touchStart.x),\r\n    y: translate.y + (clientY - touchStart.y),\r\n  }\r\n  // 判断拖拽后元素有没有出界\r\n  let bounds = getBounds(this.el, zoom, newMovingTranslate, transformOrigin);\r\n  for (let side in bounds) {\r\n    if (bounds[side] > padding) {\r\n      switch (side) {\r\n        case 'top':\r\n          newMovingTranslate.y = (transformOrigin.y * (zoom - 1)) + padding;\r\n          break;\r\n        case 'right':\r\n          newMovingTranslate.x = ((this.el.clientWidth - transformOrigin.x) * (1 - zoom)) - padding;\r\n          break;\r\n        case 'bottom':\r\n          newMovingTranslate.y = ((this.el.clientHeight - transformOrigin.y) * (1 - zoom)) - padding;\r\n          break;\r\n        case 'left':\r\n          newMovingTranslate.x = (transformOrigin.x * (zoom - 1)) + padding;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  this.setState(assign({}, this.state, {\r\n    movingTranslate: newMovingTranslate\r\n  }));\r\n}\r\n/**\r\n * 手指抬起退出拖拽模式\r\n */\r\nfunction TouchMoveEnd() {\r\n  let { movingTranslate } = this.state;\r\n  this.setState(assign({}, this.state, {\r\n    translate: assign({}, movingTranslate),\r\n    isTouchMoving: false,\r\n  }));\r\n  this.parentNode.removeEventListener('touchmove', this._on['touchmove']);\r\n  this.parentNode.removeEventListener('touchend', this._on['touchmoveend']);\r\n}\r\n/**\r\n * 双指 touch 进入缩放模式\r\n * @param {event} event \r\n */\r\nfunction TouchZoomStart(event) {\r\n  let { zoomable, touchTimer, isTouchMoving } = this.state;\r\n  if (!zoomable || isTouchMoving) return;\r\n  preventDefault(event);\r\n  let touches = parseTouches(this.parentNode, event.touches);\r\n  let length = touches.length;\r\n  if (length === 2) {\r\n    // 100ms 内变为两指，取消拖拽操作\r\n    if (touchTimer) {\r\n      window.clearTimeout(touchTimer);\r\n    }\r\n    let [a, b] = touches;\r\n    this.setState(assign({}, this.state, {\r\n      touchTimer: null,\r\n      isTouchZoom: true,\r\n      touchDistance: Math.sqrt(Math.pow((a.offsetX - b.offsetX), 2) + Math.pow((a.offsetY - b.offsetY), 2)),\r\n    }));\r\n    this.parentNode.addEventListener('touchmove', this._on['touchzoom']);\r\n    this.parentNode.addEventListener('touchend', this._on['touchzoomend']);\r\n  }\r\n}\r\n/**\r\n * 移动手指进行缩放\r\n * @param {event} event \r\n */\r\nfunction TouchZoom(event) {\r\n  preventDefault(event);\r\n  let { minZoom, maxZoom, zoomSpeed } = this.options;\r\n  let { dragable, zoom, translate, transformOrigin, touchZoomTimer, touchDistance } = this.state;\r\n  let touches = parseTouches(this.parentNode, event.touches);\r\n  let length = touches.length;\r\n  let [a, b] = touches;\r\n  // 必须放在 timer 前\r\n  if (length === 1) {\r\n    this._on.onTouchZoomEnd();\r\n    return;\r\n  }\r\n  // 100ms 内重复触发不再执行\r\n  if (touchZoomTimer) {\r\n    return;\r\n  } else {\r\n    this.state.touchZoomTimer = setTimeout(() => {\r\n      this.state.touchZoomTimer = null;\r\n    }, 100);\r\n  }\r\n  let newTouchDistance = Math.sqrt(Math.pow((a.offsetX - b.offsetX), 2) + Math.pow((a.offsetY - b.offsetY), 2));\r\n  let delta = (newTouchDistance / touchDistance);\r\n  let newZoom = zoom * delta;\r\n  // 边界情况判断\r\n  if (newZoom < minZoom) {\r\n    newZoom = minZoom;\r\n  } else if (newZoom > maxZoom) {\r\n    newZoom = maxZoom;\r\n  } else if (Math.abs(newZoom - 1) < (zoomSpeed / 2)) {\r\n    newZoom = 1;\r\n  }\r\n  // 小于等于 1 时不允许拖拽，大于 1 时需要注意不能出界\r\n  if (newZoom <= 1) {\r\n    dragable = false;\r\n    translate = { x: 0, y: 0 };\r\n    transformOrigin = {\r\n      x: (this.el.clientWidth / 2),\r\n      y: (this.el.clientHeight / 2),\r\n    }\r\n  } else {\r\n    dragable = true;\r\n    // 避免直接修改原对象\r\n    translate = {\r\n      x: translate.x,\r\n      y: translate.y\r\n    };\r\n    transformOrigin = {\r\n      x: (a.offsetX + b.offsetX) / 2,\r\n      y: (a.offsetY + b.offsetY) / 2,\r\n    };\r\n    // 判断缩放后元素有没有出界\r\n    let bounds = getBounds(this.el, newZoom, translate, transformOrigin);\r\n    for (let side in bounds) {\r\n      if (bounds[side] > 0) {\r\n        switch (side) {\r\n          case 'top':\r\n            translate.y -= bounds.top;\r\n            break;\r\n          case 'right':\r\n            translate.x += bounds.right;\r\n            break;\r\n          case 'bottom':\r\n            translate.y += bounds.bottom;\r\n            break;\r\n          case 'left':\r\n            translate.x -= bounds.left;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.setState(assign({}, this.state, {\r\n    dragable,\r\n    zoom: newZoom,\r\n    translate,\r\n    transformOrigin,\r\n    touchDistance: newTouchDistance,\r\n  }))\r\n}\r\n/**\r\n * 手指抬起退出缩放模式\r\n */\r\nfunction TouchZoomEnd() {\r\n  this.setState(assign({}, this.state, {\r\n    isTouchZoom: false\r\n  }))\r\n  this.parentNode.removeEventListener('touchmove', this._on['touchzoom']);\r\n  this.parentNode.removeEventListener('touchmoveend', this._on['touchzoomend'])\r\n}\r\n\r\nexport {\r\n  MouseWheel,\r\n  MouseDown,\r\n  MouseMove,\r\n  MouseUp,\r\n  TouchMoveStart,\r\n  TouchMove,\r\n  TouchMoveEnd,\r\n  TouchZoomStart,\r\n  TouchZoom,\r\n  TouchZoomEnd,\r\n}","/**\r\n * simple-zoom 1.0.0\r\n * https://github.com/Billbiubiu/simple-zoom\r\n * Author: Wuhao \r\n */\r\n\r\nimport './index.css';\r\nimport * as utils from './utils';\r\nimport * as eventHandlers from './event-handlers';\r\n\r\nconst assign = Object.assign;\r\n\r\n// 默认配置\r\nconst DEFAULTOPTIONS = {\r\n  zoomable: true, // 锁定 zoom\r\n  dragable: true, // 锁定 position\r\n  initZoom: 1,    // 原始缩放比例\r\n  minZoom: 1,   // 最小缩放比例\r\n  maxZoom: 5,    // 最大缩放比例\r\n  zoomSpeed: 0.1, // 默认缩放速度\r\n  padding: 0,     // 最大内边距\r\n};\r\n\r\nexport default class SimpleZoom {\r\n  /**\r\n   * @class SimpleZoom\r\n   * @param {string|object} el \r\n   * @param {object} options \r\n   */\r\n  constructor(el, options = {}) {\r\n    // 根据传入的参数获取实例元素\r\n    if (!el) {\r\n      throw new Error('please provide a target element!');\r\n    } else if (typeof el == 'string') {\r\n      this.el = document.querySelector(el);\r\n      if (!this.el) {\r\n        throw new Error('target is not found!');\r\n      }\r\n    } else if (typeof el == 'object') {\r\n      if (utils.isHTMLElement(el)) {\r\n        this.el = el;\r\n      } else {\r\n        throw new Error('target is not HTMLElement!');\r\n      }\r\n    }\r\n    // 设置父元素样式\r\n    if (this.el.parentNode && this.el.parentNode.tagName) {\r\n      this.parentNode = this.el.parentNode;\r\n      this.parentNode.classList.add('simple-zoom-container');\r\n    } else {\r\n      throw new Error('target can not be root-element!');\r\n    }\r\n    if (typeof options !== 'object') {\r\n      throw new Error('options is supposed to be an object!')\r\n    }\r\n    // 覆盖默认的配置\r\n    this.options = assign({}, DEFAULTOPTIONS, options);\r\n    // 不允许 padding 超过宽高的一半\r\n    this.options.padding = Math.min((this.el.clientWidth / 2), (this.el.clientHeight / 2), this.options.padding);\r\n    // 不允许 initZoom 超过范围\r\n    this.options.initZoom = Math.max(Math.max(this.options.minZoom, this.options.initZoom), Math.min(this.options.maxZoom, this.options.initZoom));\r\n    // 根据 options 添加 class\r\n    let classList = this.el.classList;\r\n    classList.add('simple-zoom-el');\r\n    if(!this.options.zoomable) classList.add('zoom-locked');\r\n    if(!this.options.dragable) classList.add('drag-locked');\r\n    // 保存事件处理函数，方便移除时使用\r\n    this._on = {\r\n      // 滚轮事件\r\n      'mousewheel': eventHandlers.MouseWheel.bind(this),\r\n      'DOMMouseScroll': eventHandlers.MouseWheel.bind(this),\r\n      // 鼠标点击事件\r\n      'mousedown': eventHandlers.MouseDown.bind(this),\r\n      'mousemove': eventHandlers.MouseMove.bind(this),\r\n      'mouseup': eventHandlers.MouseUp.bind(this),\r\n      'mouseout': eventHandlers.MouseUp.bind(this),\r\n      // 移动端拖拽事件\r\n      'touchmovestart': eventHandlers.TouchMoveStart.bind(this),\r\n      'touchmove': eventHandlers.TouchMove.bind(this),\r\n      'touchmoveend': eventHandlers.TouchMoveEnd.bind(this),\r\n      // 移动端缩放事件\r\n      'touchzoomstart': eventHandlers.TouchZoomStart.bind(this),\r\n      'touchzoom': eventHandlers.TouchZoom.bind(this),\r\n      'touchzoomend': eventHandlers.TouchZoomEnd.bind(this),\r\n    }\r\n    // 通过 on 添加的事件\r\n    this._onListeners = Object.create(null);\r\n    // 通过 addEventListener 添加的事件\r\n    this._eventListeners = Object.create(null);\r\n    // 初始化\r\n    this._init();\r\n  }\r\n  /**\r\n   * 初始化 state 和事件监听\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   */\r\n  _init() {\r\n    // 初始状态\r\n    this.reset();\r\n    this.update();\r\n    // 根据配置确定是否启用缩放和拖拽\r\n    let { zoomable, dragable } = this.options;\r\n    if (zoomable) {\r\n      this.el.addEventListener('mousewheel', this._on['mousewheel']);\r\n      this.el.addEventListener('DOMMouseScroll', this._on['DOMMouseScroll']);\r\n      this.parentNode.addEventListener('touchstart', this._on['touchzoomstart']);\r\n    }\r\n    if (dragable) {\r\n      this.el.addEventListener('mousedown', this._on['mousedown']);\r\n      this.parentNode.addEventListener('touchstart', this._on['touchmovestart']);\r\n    }\r\n  }\r\n  /**\r\n   * 设置 transform 属性\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   * @param {number} zoom \r\n   * @param {object} translate \r\n   */\r\n  _setTransform(zoom, translate) {\r\n    let { x, y } = translate;\r\n    this.el.style.transform = `scale(${zoom}) translate(${x / zoom}px,${y / zoom}px)`;\r\n  }\r\n  /**\r\n   * 设置 transformOrigin 属性\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   * @param {object} transformOrigin \r\n   */\r\n  _setTransformOrigin(transformOrigin) {\r\n    let { x, y } = transformOrigin;\r\n    this.el.style.transformOrigin = `${x}px ${y}px`;\r\n  }\r\n  /**\r\n   * 执行已有的事件监听\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   * @param {string} type \r\n   * @param {event} event \r\n   */\r\n  _dispatchEvent(type, data) {\r\n    let event = {\r\n      type,\r\n      data,\r\n      timestamp: Date.now()\r\n    };\r\n    if (this._onListeners[type]) {\r\n      try {\r\n        this._onListeners[type](event);\r\n      } catch (error) {\r\n        console.warn(error)\r\n      }\r\n    }\r\n    if (this._eventListeners[type] && this._eventListeners[type].length) {\r\n      this._eventListeners[type].forEach(listener => {\r\n        try {\r\n          listener(event);\r\n        } catch (error) {\r\n          console.warn(error)\r\n        }\r\n      })\r\n    }\r\n  }\r\n  /**\r\n   * 重置当前 state\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   */\r\n  reset() {\r\n    let { zoomable, dragable, initZoom } = this.options;\r\n    let state = {\r\n      // 缩放锁\r\n      zoomable: zoomable,\r\n      // 位置锁\r\n      dragable: dragable,\r\n      // 缩放比例\r\n      zoom: initZoom,\r\n      // 偏移位置\r\n      translate: { x: 0, y: 0 },\r\n      // 暂时保存拖拽时的偏移位置\r\n      movingTranslate: { x: 0, y: 0 },\r\n      // 缩放中心\r\n      transformOrigin: { \r\n        x: (this.el.clientWidth / 2),\r\n        y: (this.el.clientHeight / 2)\r\n      },\r\n      /** PC端专用 **/\r\n      // 是否正在拖拽\r\n      isMouseMoving: false,\r\n      // 拖拽起点\r\n      moveStart: { x: 0, y: 0 },\r\n      /** 移动端专用 **/\r\n      // 延时执行，用于判断是否为拖拽操作\r\n      touchTimer: null,\r\n      // 已判定为拖拽操作后不可取消\r\n      isTouchMoving: false,\r\n      // 已判定为缩放操作后不可取消\r\n      isTouchZoom: false,\r\n      // 拖拽起点\r\n      touchStart: { x: 0, y: 0 },\r\n      // 避免频繁触发缩放\r\n      touchZoomTimer: null,\r\n      // 两指间的距离\r\n      touchDistance: 0,\r\n    }\r\n    if (initZoom <= 1) {\r\n      state.dragable = false;\r\n    }\r\n    this.setState(state);\r\n  }\r\n  /**\r\n   * 手动更新实例\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   */\r\n  update() {\r\n    let { zoom, translate, transformOrigin } = this.state;\r\n    this._setTransform(zoom, translate);\r\n    this._setTransformOrigin(transformOrigin)\r\n  }\r\n  /**\r\n   * 销毁当前实例\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   */\r\n  destroy() {\r\n    let { zoomable, dragable } = this.options;\r\n    if (zoomable) {\r\n      this.el.removeEventListener('mousewheel', this._on['mousewheel']);\r\n      this.el.removeEventListener('DOMMouseScroll', this._on['DOMMouseScroll']);\r\n      this.parentNode.removeEventListener('touchstart', this._on['touchzoomstart']);\r\n    }\r\n    if (dragable) {\r\n      this.el.removeEventListener('mousedown', this._on['mousedown']);\r\n      this.parentNode.removeEventListener('touchstart', this._on['touchmovestart']);\r\n    }\r\n  }\r\n  /**\r\n   * 设置 state，自动更新 dom 并抛出相应的事件\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   * @param {object} state \r\n   */\r\n  setState(state) {\r\n    this.state = this.state || state;\r\n    // 对比前后的 state，根据变动抛出相应的事件\r\n    let isMoved = (state.isMouseMoving || state.isTouchMoving);\r\n    let isZoomed = !utils.deepCompare(this.state.zoom, state.zoom);\r\n    let isTranslated = !utils.deepCompare(this.state.translate, state.translate);\r\n    let transformOriginChanged = !utils.deepCompare(this.state.transformOrigin, state.transformOrigin);\r\n    this.state = assign({}, this.state, state);\r\n    // 移动过程中以及 zoom 和 translate 变更时，需要更新 style.transform\r\n    if (isMoved) {\r\n      this._setTransform(state.zoom, state.movingTranslate);\r\n    } else if (isZoomed || isTranslated) {\r\n      this._setTransform(state.zoom, state.translate);\r\n    }\r\n    // transformOrigin 变更需要更新 style.transformOrigin\r\n    if (transformOriginChanged) {\r\n      this._setTransformOrigin(state.transformOrigin);\r\n    }\r\n    // 触发相应的事件\r\n    if (isMoved || isTranslated) {\r\n      this._dispatchEvent('move', state);\r\n    }\r\n    if (isZoomed || transformOriginChanged) {\r\n      this._dispatchEvent('zoom', state);\r\n    }\r\n    this._dispatchEvent('updated', state)\r\n  }\r\n  /**\r\n   * 绑定事件监听\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   * @param {string} type \r\n   * @param {function} callback \r\n   */\r\n  on(type, callback) {\r\n    if (typeof type !== 'string') {\r\n      throw new Error('event type must be a string')\r\n    }\r\n    if (typeof callback !== 'function') {\r\n      throw new Error('event callback type must be a string')\r\n    }\r\n    this._onListeners[type] = callback;\r\n  }\r\n  /**\r\n   * 关闭事件监听\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   * @param {string} type \r\n   */\r\n  off(type) {\r\n    this._onListeners[type] = () => { };\r\n  }\r\n  /**\r\n   * 添加事件监听\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   * @param {string} type \r\n   * @param {function} callback \r\n   */\r\n  addEventListener(type, callback) {\r\n    if (typeof type !== 'string') {\r\n      throw new Error('event type must be a string')\r\n    }\r\n    if (typeof callback !== 'function') {\r\n      throw new Error('event callback type must be a string')\r\n    }\r\n    if (this._eventListeners[type]) {\r\n      this._eventListeners[type].push(callback);\r\n    } else {\r\n      this._eventListeners[type] = [callback];\r\n    }\r\n  }\r\n  /**\r\n   * 移除事件监听\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   * @param {string} type \r\n   * @param {function} callback \r\n   */\r\n  removeEventListener(type, callback) {\r\n    if (this._eventListeners[type] && this._eventListeners[type].length) {\r\n      this._eventListeners[type] = this._eventListeners[type].filter((listener) => {\r\n        return listener !== callback;\r\n      })\r\n    }\r\n  }\r\n  /**\r\n   * 订阅已有实例，同步缩放\r\n   * @memberof SimpleZoom\r\n   * @instance\r\n   * @param {*} instance \r\n   */\r\n  subscribe(instance) {\r\n    if(instance && instance instanceof SimpleZoom) {\r\n      instance.addEventListener('updated', (event) => {\r\n        this.setState(event.data)\r\n      })\r\n    }\r\n  }\r\n}"],"sourceRoot":""}